local pers_data = require("main._scripts.modules.persistant_data_module")

function init(self)
	-- msg.post("/proxy_loader#level_loader_manager", "loadGUI", { guiNumber = 1 })
	-- pers_data.adjust_currency(500)

	msg.post("/proxy_loader#level_loader_manager", "loadLevel", { newLevel = 4 })
	msg.post("/proxy_loader#level_loader_manager", "loadGUI", { guiNumber = 4 })
	msg.post("/proxy_loader#level_loader_manager", "loadGUI", { guiNumber = 2 })
end


function fixed_update(self, dt)

end

function on_message(self, message_id, message, sender)
	if message_id == hash("loadCombatZone") then
		local newCoords = message.newCoords
		local lastCoords = message.lastCoords

		-- Ensure lastCoords is valid before calculating distance
		local distance = 0
		if lastCoords and lastCoords.x and lastCoords.y then
			local dx = newCoords.x - lastCoords.x
			local dy = newCoords.y - lastCoords.y
			distance = math.ceil(math.sqrt(dx * dx + dy * dy))  -- Round up to nearest whole number
		end
		
		-- Send messages to load the new level
		msg.post("/proxy_loader#level_loader_manager", "loadLevel", { newLevel = message.newLevel })

		-- have to wait for it to load... this is not ideal but yea
		timer.delay(3, false, function()
			msg.post("gui_player_menu:/go#main_game", "startTimer", { time = distance })
		end)
	end

	if message_id == hash("finishCombatZone") then
		-- TODO : do some better transitoins
		msg.post("/proxy_loader#level_loader_manager", "loadLevel", { newLevel = 4 })
		msg.post("/proxy_loader#level_loader_manager", "loadGUI", { guiNumber = 4 })
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
