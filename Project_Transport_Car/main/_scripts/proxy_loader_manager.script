function init(self)
	self.current_level = 0
	self.new_level = 0

	msg.post(".", "acquire_input_focus")
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function fixed_update(self, dt)
	-- This function is called if 'Fixed Update Frequency' is enabled in the Engine section of game.project
	-- Can be coupled with fixed updates of the physics simulation if 'Use Fixed Timestep' is enabled in
	-- Physics section of game.project
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)

	if message_id == hash("test") then
		print("asfdafsd")
	end
	
	if message_id == hash("loadLevel") then
		self.oldLevel = message.newCurrentLevel
		self.newLevel = message.newNewLevel
		self.loadingLevel = true
		
		local nextProxy = "#proxy_level_" .. self.newLevel
		msg.post(nextProxy, "load")
	end

	if message_id == hash("loadGUI") then
		self.loadingGUI = true
		
		local guiProxy = "#gui_" .. message.guiNumber
		msg.post(guiProxy, "load")
	end

	if message_id == hash("unloadGUI") then
		local guiProxy = "#gui_" .. message.guiNumber
		msg.post(guiProxy, "disable")
		msg.post(guiProxy, "final")
		msg.post(guiProxy, "unload")
	end

	if message_id == hash("proxy_loaded") then
		if self.loadingLevel then
			msg.post(sender, "init")
			msg.post(sender, "enable")

			local currentProxy = "#proxy_level_" .. self.oldLevel
			msg.post(currentProxy, "disable")
			msg.post(currentProxy, "final")
			msg.post(currentProxy, "unload")

			self.loadingLevel = false
		elseif self.loadingGUI then
			msg.post(sender, "init")
			msg.post(sender, "enable")

			-- Reset GUI loading flag
			self.loadingGUI = false
		end
	end
end


function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
